version: "3.9"

services:
    backend:
        container_name: django-practice
        build: .        
        volumes:
            - .:/app
            - static_volume:/app/static
            - media_volume:/app/media
        ports:
            - "8000:8000"        
        command: sh ./entrypoint.sh
        depends_on:
            db:
                condition: service_healthy
            redis:
                condition: service_healthy
    
    db:
        container_name: pg-db1
        image: postgres:15-alpine
        volumes:
            - postgres_data:/var/lib/postgresql/data
        ports:
            - "5432:5432"
        env_file:
            - .env
        restart: always
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 10s

    redis:
        image: redis:latest
        restart: always
        container_name: redis1
        ports:
            - "6379:6379"
        command: redis-server --save 60 1 --loglevel warning
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 5s

    worker-celery:
        build: .
        container_name: worker-celery1
        volumes:
            - .:/app
        command: celery -A core worker --loglevel=info
        depends_on:
            redis:
                condition: service_healthy
            backend:
                condition: service_started
    beat-celery:
        build: .
        container_name: beat-celery1
        volumes:
            - .:/app
        command: celery -A core beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
        depends_on:
            redis:
                condition: service_healthy
            backend:
                condition: service_started
    
    nginx:
        image: nginx
        container_name: nginx1
        restart: always
        ports: 
            - "80:80"
        depends_on:
            redis:
                condition: service_healthy
            backend:
                condition: service_started
        volumes:
            - ./default.conf:/etc/nginx/conf.d/default.conf
            - static_volume:/home/app/static
            - media_volume:/home/app/media

volumes:
  static_volume:
  media_volume:
  postgres_data: